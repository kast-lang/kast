name: Build and test
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install and setup dune
        shell: bash
        run: |
          curl -fsSL https://get.dune.build/install | sh
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "DUNE_CACHE_ROOT=$HOME/.cache/dune" >> "$GITHUB_ENV"
      - name: Cache duneâ€™s cache
        uses: actions/cache@v4
        id: dune-cache
        with:
          path: |
            ${{ env.DUNE_CACHE_ROOT }}
          key: dune-cache-${{ runner.os }}-${{ runner.arch }}
      - name: Cache Dune _build
        uses: actions/cache@v3
        with:
          path: _build
          key: dune-build-${{ runner.os }}-${{ runner.arch }}
      - name: Resolve dependencies
        shell: bash
        run: |
          dune pkg lock
      - name: Create fake generated ocaml
        shell: bash
        run: |
          touch generated-ocaml/generated_ocaml.ml
      - name: Build project
        shell: bash
        run: |
          dune build
      - name: Run tests
        shell: bash
        run: |
          dune runtest
      - name: Collect artifacts
        run: |
          mkdir -p dist
          cp _build/default/src/kast/js/kast_js.bc.js dist
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      
  pages:
    needs:
      - build
    name: Pages
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'kast-lang'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
